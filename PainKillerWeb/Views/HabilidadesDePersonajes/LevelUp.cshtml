@model PainKillerWeb.Models.Pivot.HabilidadDePersonaje

@{
    ViewData["Title"] = "Subir Nivel De Habilidad";
}

<h2 class="goingMedievalG">Subir Habilidad de Nivel</h2>
@{
    int i = Model.Nivel + 1;
}
<hr />
<div class="row">
    <div class="col-md-4">
        <p class="goingMedievalG">Estas seguro que deseas subir de nivel la habilidad "@Model.Habilidad.nombre" (@Model.Habilidad.atributo.nombre) del personaje @Model.Personaje.nombre </p>
        <p class="goingMedievalG"><strong>Tendra un costo de @i puntos de Experiencia </strong></p>

        <form asp-action="LevelUp">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div>
                <input type="hidden" asp-for="id" />
                <input type="hidden" asp-for="personajeId" class="form-control" value="@Model.personajeId" />
                <input type="hidden" asp-for="HabilidadId" class="form-control" value="@Model.HabilidadId" />

                <input type="hidden" asp-for="Nivel" class="form-control" value="@i" />
            </div>

            @if (ViewBag.posible)
            {
                <div class="form-group">
                    <input type="submit" value="Subir A Nivel @i" class="btn btn-success" />
                </div>
            }
            else
            {
                <div class="form-group">
                    <input type="submit" value="Subir A Nivel @i" class="btn btn-success " disabled />
                </div>
                <span class="text-danger"><strong>Experiencia</strong> Insuficiente </span>

            }





        </form>
    </div>
</div>

<div>
    <a asp-controller="Personajes" asp-action="Details" asp-route-id="@Model.personajeId" class="btn btn-outline-danger mt-2 btn-sm">Regresar</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
