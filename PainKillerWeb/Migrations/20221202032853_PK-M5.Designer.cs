// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PainKillerWeb.Context;

namespace PainKillerWeb.Migrations
{
    [DbContext(typeof(PainKillerDbContext))]
    [Migration("20221202032853_PK-M5")]
    partial class PKM5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PainKillerWeb.Models.Main.Atributo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("atributos");
                });

            modelBuilder.Entity("PainKillerWeb.Models.Main.Habilidad", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("atributoId")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("atributoId");

                    b.ToTable("habilidades");
                });

            modelBuilder.Entity("PainKillerWeb.Models.Main.Personaje", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("energiaAct")
                        .HasColumnType("int");

                    b.Property<int>("energiaMax")
                        .HasColumnType("int");

                    b.Property<int>("expActual")
                        .HasColumnType("int");

                    b.Property<int>("expGastada")
                        .HasColumnType("int");

                    b.Property<int>("manaAct")
                        .HasColumnType("int");

                    b.Property<int>("manaMax")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(21)")
                        .HasMaxLength(21);

                    b.Property<int>("razaId")
                        .HasColumnType("int");

                    b.Property<int>("vidaAct")
                        .HasColumnType("int");

                    b.Property<int>("vidaMax")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("razaId");

                    b.ToTable("personajes");
                });

            modelBuilder.Entity("PainKillerWeb.Models.Main.Raza", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("atributoPesimoid")
                        .HasColumnType("int");

                    b.Property<int?>("atributoRelevante2id")
                        .HasColumnType("int");

                    b.Property<int?>("atributoRelevanteid")
                        .HasColumnType("int");

                    b.Property<int>("idAtributoPesimo")
                        .HasColumnType("int");

                    b.Property<int>("idAtributoRelevante")
                        .HasColumnType("int");

                    b.Property<int>("idAtributoRelevante2")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(21)")
                        .HasMaxLength(21);

                    b.HasKey("id");

                    b.HasIndex("atributoPesimoid");

                    b.HasIndex("atributoRelevante2id");

                    b.HasIndex("atributoRelevanteid");

                    b.ToTable("raza");
                });

            modelBuilder.Entity("PainKillerWeb.Models.Pivot.AtributoDePersonaje", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("atributoId")
                        .HasColumnType("int");

                    b.Property<int>("nivel")
                        .HasColumnType("int");

                    b.Property<int>("personajeId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("atributoId");

                    b.HasIndex("personajeId");

                    b.ToTable("atributosDePersonajes");
                });

            modelBuilder.Entity("PainKillerWeb.Models.Pivot.HabilidadDePersonaje", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HabilidadId")
                        .HasColumnType("int");

                    b.Property<int>("Nivel")
                        .HasColumnType("int");

                    b.Property<int>("personajeId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("HabilidadId");

                    b.HasIndex("personajeId");

                    b.ToTable("habilidadDePersonajes");
                });

            modelBuilder.Entity("PainKillerWeb.Models.Main.Habilidad", b =>
                {
                    b.HasOne("PainKillerWeb.Models.Main.Atributo", "atributo")
                        .WithMany()
                        .HasForeignKey("atributoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PainKillerWeb.Models.Main.Personaje", b =>
                {
                    b.HasOne("PainKillerWeb.Models.Main.Raza", "raza")
                        .WithMany()
                        .HasForeignKey("razaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PainKillerWeb.Models.Main.Raza", b =>
                {
                    b.HasOne("PainKillerWeb.Models.Main.Atributo", "atributoPesimo")
                        .WithMany()
                        .HasForeignKey("atributoPesimoid");

                    b.HasOne("PainKillerWeb.Models.Main.Atributo", "atributoRelevante2")
                        .WithMany()
                        .HasForeignKey("atributoRelevante2id");

                    b.HasOne("PainKillerWeb.Models.Main.Atributo", "atributoRelevante")
                        .WithMany()
                        .HasForeignKey("atributoRelevanteid");
                });

            modelBuilder.Entity("PainKillerWeb.Models.Pivot.AtributoDePersonaje", b =>
                {
                    b.HasOne("PainKillerWeb.Models.Main.Atributo", "atributo")
                        .WithMany()
                        .HasForeignKey("atributoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PainKillerWeb.Models.Main.Personaje", "personaje")
                        .WithMany("atributos")
                        .HasForeignKey("personajeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PainKillerWeb.Models.Pivot.HabilidadDePersonaje", b =>
                {
                    b.HasOne("PainKillerWeb.Models.Main.Habilidad", "Habilidad")
                        .WithMany()
                        .HasForeignKey("HabilidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PainKillerWeb.Models.Main.Personaje", "Personaje")
                        .WithMany("habilidades")
                        .HasForeignKey("personajeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
